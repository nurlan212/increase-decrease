{"version":3,"sources":["store/actions.js","store/actionTypes.js","axios-counter.js","components/UI/Preloader/Preloader.js","components/UI/Modal/Modal.js","components/Counter/Counter.js","containers/App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["firebaseKey","cancelToken","FETCH_COUNTER_REQUEST","FETCH_COUNTER_SUCCESS","FETCH_COUNTER_ERROR","INCREASE_COUNTER","DECREASE_COUNTER","ADD","SUBTRACT","CLOSE_MODAL","instance","axios","create","baseURL","fetch_counter_error","error","type","Preloader","className","Modal","text","onClickBtn","onClick","Counter","counter","useSelector","state","isLoading","errorShowed","dispatch","useDispatch","useEffect","getData","a","axios_counter","get","response","Object","keys","data","curCounter","cancel","CancelToken","source","put","token","message","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","applyMiddleware","thunkMiddleware","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d04814d.chunk.js","sourcesContent":["import {\n  FETCH_COUNTER_REQUEST,\n  FETCH_COUNTER_SUCCESS,\n  FETCH_COUNTER_ERROR,\n  INCREASE_COUNTER,\n  DECREASE_COUNTER,\n  ADD,\n  SUBTRACT,\n  CLOSE_MODAL,\n} from \"./actionTypes\";\nimport axios_counter from \"../axios-counter\";\nimport axios from \"axios\";\n\nexport const increase_counter = () => {\n  return { type: INCREASE_COUNTER };\n};\nexport const decrease_counter = () => {\n  return { type: DECREASE_COUNTER };\n};\nexport const add_value = (value) => {\n  return { type: ADD, value };\n};\nexport const subtract_value = (value) => {\n  return { type: SUBTRACT, value };\n};\nexport const close_modal = () => {\n  return { type: CLOSE_MODAL };\n};\nconst fetch_counter_request = () => {\n  return { type: FETCH_COUNTER_REQUEST };\n};\nconst fetch_counter_success = (counter) => {\n  return { type: FETCH_COUNTER_SUCCESS, counter };\n};\nconst fetch_counter_error = (error) => {\n  return { type: FETCH_COUNTER_ERROR, error };\n};\n\nlet firebaseKey;\nexport const fetch_counter = () => {\n  return async (dispatch, getData) => {\n    dispatch(fetch_counter_request());\n    try {\n      const response = await axios_counter.get(\"/67_1.json\");\n      firebaseKey = Object.keys(response.data)[0];\n      dispatch(fetch_counter_success(response.data[firebaseKey].counter));\n    } catch (e) {\n      dispatch(fetch_counter_error(e));\n    }\n  };\n};\n\nlet cancelToken;\nexport const fetch_counter_post = (curCounter) => {\n  return async (dispatch) => {\n    if (firebaseKey) {\n      if (typeof cancelToken != typeof undefined) {\n        cancelToken.cancel(\"Operation canceled due to new request.\");\n      }\n      cancelToken = axios.CancelToken.source();\n      try {\n        await axios_counter.put(\n          `/67_1/${firebaseKey}.json`,\n          { counter: curCounter },\n          { cancelToken: cancelToken.token }\n        );\n      } catch (e) {\n        dispatch(fetch_counter_error(e));\n      }\n    }\n  };\n};\n","export const FETCH_COUNTER_REQUEST = 'FETCH_COUNTER_REQUEST';\nexport const FETCH_COUNTER_SUCCESS = 'FETCH_COUNTER';\nexport const FETCH_COUNTER_ERROR = 'FETCH_COUNTER_ERROR';\nexport const INCREASE_COUNTER = 'INCREASE_COUNTER';\nexport const DECREASE_COUNTER = 'DECREASE_COUNTER';\nexport const ADD = 'ADD';\nexport const SUBTRACT = 'SUBTRACT';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://nuralmkz-default-rtdb.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\nimport './Preloader.css';\n\nconst Preloader = () => {\n  return <div className=\"Preloader\"/>\n};\n\nexport default Preloader;","import React from 'react';\nimport './Modal.css';\n\nconst Modal = ({text, onClickBtn}) => {\n  return <>\n    <div className=\"Modal__backdrop\"/>\n    <div className=\"Modal__window\">\n      <div className=\"Modal__window__header\">\n        <button className='Modal__window__btn Modal__window__btn-close' onClick = {onClickBtn}>\n          &#10005;\n        </button>\n      </div>\n      <p className=\"Modal__window__text\">{text}</p>\n      <button className=\"Modal__window__btn Modal__window__btn-ok\" onClick = {onClickBtn}>\n        Ok\n      </button>\n    </div>\n  </>\n};\n\nexport default Modal;","import React, { useEffect } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { decrease_counter, fetch_counter, fetch_counter_post, increase_counter, add_value, subtract_value, close_modal } from '../../store/actions';\nimport Preloader from '../UI/Preloader/Preloader';\nimport Modal from '../UI/Modal/Modal';\n\nconst Counter = () => {\n  const counter = useSelector(state => state.counter);\n  const isLoading = useSelector(state => state.isLoading);\n  const error = useSelector(state => state.error);\n  const errorShowed = useSelector(state => state.errorShowed);\n  const dispatch = useDispatch();\n  const VALUE = 20;\n  \n\n  const increase = () => {\n    dispatch(increase_counter());    \n  };\n\n  const decrease = () => {\n    dispatch(decrease_counter());\n  }\n\n  const addVal = () => {\n    dispatch(add_value(VALUE));\n  };\n\n  const subtractVal = () => {\n    dispatch(subtract_value(VALUE));\n  };\n\n  const closeModal = () => {\n    dispatch(close_modal());\n  };\n\n  useEffect(() => {\n    dispatch(fetch_counter());\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(fetch_counter_post(counter));\n  }, [counter, dispatch])  \n  \n  return (\n    <>\n      {errorShowed ? <Modal text = {error.message} onClickBtn = {closeModal}/> : null}\n      {isLoading ? <Preloader /> : null}\n      <h1>{counter}</h1>\n      <button onClick = {increase}>Increase</button>\n      <button onClick = {decrease}>Decrease</button>\n      <button onClick = {addVal}>Add {VALUE}</button>\n      <button onClick = {subtractVal}>Subtract {VALUE}</button>\n    </>\n  );\n};\n\nexport default Counter;","import '../App.css';\nimport Counter from '../components/Counter/Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FETCH_COUNTER_REQUEST, FETCH_COUNTER_SUCCESS, FETCH_COUNTER_ERROR, INCREASE_COUNTER, DECREASE_COUNTER, ADD, SUBTRACT, CLOSE_MODAL} from './actionTypes';\n\nconst initialState = {\n  counter: 3,\n  isLoading: false,\n  error: null,\n  errorShowed: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type){\n    case FETCH_COUNTER_REQUEST:\n      return {...state, isLoading: true};\n    case FETCH_COUNTER_SUCCESS:\n      return {...state, counter: action.counter, isLoading: false};\n    case FETCH_COUNTER_ERROR:\n      return {...state, error: action.error, errorShowed: true, isLoading: false};\n    case CLOSE_MODAL:\n      return {...state, errorShowed: false};\n    case INCREASE_COUNTER:\n      return {...state, counter: state.counter + 1};\n    case DECREASE_COUNTER:\n      if(state.counter > 0) {\n        return {...state, counter: state.counter - 1};\n      } else {\n        return state;\n      }\n    case ADD:\n      return {...state, counter: state.counter + action.value};\n    case SUBTRACT:\n      if(state.counter >= action.value) {\n        return {...state, counter: state.counter - action.value};\n      } else {\n        return state;\n      }      \n    default:\n      return state;\n  }  \n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nconst app = (\n  <Provider store = {store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render( app, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}